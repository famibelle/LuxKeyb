plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk = 35
    namespace 'com.example.kreyolkeyboard'

    signingConfigs {
        debug {
            // Configuration debug par d√©faut (automatique)
        }
        
        release {
            // Priorit√© : gradle.properties (local) > System.getenv (GitHub Actions)
            def keystoreFile = project.findProperty('KEYSTORE_FILE') ?: System.getenv("KEYSTORE_FILE")
            def storePass = project.findProperty('STORE_PASSWORD') ?: System.getenv("STORE_PASSWORD")
            def keyAliasEnv = project.findProperty('KEY_ALIAS') ?: System.getenv("KEY_ALIAS")
            def keyPass = project.findProperty('KEY_PASSWORD') ?: System.getenv("KEY_PASSWORD")
            
            if (keystoreFile && file(keystoreFile).exists() && storePass && keyAliasEnv && keyPass) {
                // Signature de production (local ou GitHub Actions)
                println "‚úÖ Production signing enabled with keystore: ${keystoreFile}"
                storeFile file(keystoreFile)
                storePassword storePass
                keyAlias keyAliasEnv
                keyPassword keyPass
                v1SigningEnabled true
                v2SigningEnabled true
            } else {
                // Fallback vers debug si secrets manquants
                println "‚ö†Ô∏è Production signing unavailable:"
                println "   - Keystore path: ${keystoreFile}"
                println "   - Keystore exists: ${keystoreFile ? file(keystoreFile).exists() : 'N/A'}"
                println "   - Store password: ${storePass ? '***' : 'MISSING'}"
                println "   - Key alias: ${keyAliasEnv ?: 'MISSING'}"
                println "   - Key password: ${keyPass ? '***' : 'MISSING'}"
                println "   ‚Üí Using debug signing"
                storeFile signingConfigs.debug.storeFile
                storePassword "android"
                keyAlias "androiddebugkey"
                keyPassword "android"
            }
        }
    }

    defaultConfig {
        applicationId "com.example.kreyolkeyboard"
        minSdk = 21
        targetSdk = 35
        versionCode = 60108
        versionName "6.1.8"
        
        // Am√©liorer la compatibilit√© Samsung ULTRA
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        
        // Param√®tres Samsung sp√©ciaux
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }

    // Configuration pour Android App Bundle (AAB)
    bundle {
        language {
            enableSplit = true
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }

    buildTypes {
        release {
            minifyEnabled = true
            shrinkResources = true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release // üîê Signature de production pour Play Store
            zipAlignEnabled = true
            debuggable = false
            
            // Optimisations suppl√©mentaires
            multiDexEnabled = true
            crunchPngs = true
            
            // Samsung compatibility flags
            manifestPlaceholders = [
                samsungCompat: "true",
                legacyCompat: "true"
            ]
        }
        debug {
            // Configuration pour le build de debug
            debuggable = true
            minifyEnabled = false
            shrinkResources = false
        }
    }
    
    // Configuration pour personnaliser le nom des fichiers APK et AAB
    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach {
            def versionName = variant.versionName
            def buildType = variant.buildType.name
            def date = new Date().format('yyyy-MM-dd')
            outputFileName = "Letzebuergesch_Clavier_v${versionName}_${buildType}_${date}.apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    
    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    
    // Nouvelles d√©pendances pour Android 14+ et am√©lioration stabilit√©
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.6'
    implementation 'androidx.lifecycle:lifecycle-service:2.8.6'
    implementation 'androidx.concurrent:concurrent-futures-ktx:1.2.0'
}

// ===============================================

